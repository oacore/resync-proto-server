======================
ResourceSync Toy Server
======================

The ResourceSync Server expose a `ResourceSync
<http://www.openarchives.org/rs>`_ Source, which is a server that hosts resources subject to synchronization.

This project is based on the [ResourceSync simulator](https://github.com/resync/resync-simulator) reference implementation
developed by [Bernhard Haslhofer](https://github.com/behas) and [Simeon Warner](https://github.com/zimeon). We left their
comments and authorship in all the source files to acknowledge their work.

Any ResourceSync-compliant client can be used to synchronize a Destination with the Source. This version of the server is written against v1.0 of the `ResourceSync specification
<http://www.openarchives.org/rs/1.0>`_ and has been tested with v1.0.2 of the `ResourceSync client and library reference implementation
<https://github.com/resync/resync>`_.

Installation
------------

This server is designed to run under Python 2.6, 2.7, 3.3, 3.4 and 3.5. Check with::

    python --version

**Automatic installation**::

    easy_install resync-server

``rsync-server`` is listed in `PyPI
<http://pypi.python.org/pypi/resync-server>`_ and can be installed with ``pip`` or ``easy_install``. Doing an ``easy_install`` should also install the dependencies ``resync`` and ``tornado`` if they are not already on your system.

**Manual installation from github**:

Install the `resync
<https://github.com/resync/resync>`_ library code and the `Tornado
<http://www.tornadoweb.org/>`_ web server (you might need to use `sudo` depending on you local setup)::

    pip install resync tornado
    
Get the ResourceSync Server from `Github
<http://www.github.com/oacore/resync-server>`_::

    git clone git://github.com/oacore/resync-server.git

Quick Start
-----------

Run the source server (with the default configuration in ``./config/default.yaml``)::

    ./resync-server

Access from a web browser as http://localhost:8888/

Terminate the source server::

    CTRL-C

How to define parameterized use cases
-------------------------------------

Parameterized Use Cases can be defined by creating a `YAML
<http://www.yaml.org/>`_ configuration file (e.g., ``source1.yaml`` and defining a set of parameters:

    source:
        name: Data Interoperability Toolkit
        folder: /Users/giorgio/Desktop/source_folder
        
        
See the examples in the **./config** directory for further details.

See also
--------

`ResourceSync library
<http://github.com/resync/resync>`_
`ResourceSync Simulator
<http://github.com/resync/resync-simulator>`_

Author and Contributors
-----------------------

Author:
`Giorgio Basile
<https://github.com/giorgiobasile>`_
